download.file(fileUrl1, destfile = "./data/reviews.csv", method = "curl")
download.file(fileUrl2, destfile = "./data/solutions.csv", method = "curl")
grep("Alameda", cameraData$intersection)
table(grepl("Alameda", cameraData$intersection))
cameraData$intersection
type(cameraData$intersection)
class(cameraData$intersection)
cameraData2 <- cameraData[!grep("Alameda", cameraData$intersection)]
View(cameraData2)
View(cameraData)
grepl("Alameda", cameraData$intersection)
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection)]
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection),]
grep("Alameda", cameraData$intersection, value = TRUE)
grep("JeffStreet", cameraData$intersection, value = TRUE)
grep("JeffStreet", cameraData$intersection)
length(grep("JeffStreet", cameraData$intersection))
library(stringr)
nchar("Jeffery Leek")
substr("Jwfery Leek,"1,7)
source('~/.active-rstudio-document', echo=TRUE)
""
c
ls()
substr("Jwfery Leel",1,7)
paste("Jeffrey","leek")
paste0("Jeffrey","leek")
str_trim("Jeff    ")
x = c("1jan1960", "1jan1960", "1jan1960", "1jan1960"); z = as.Date(x, "%d%b%Y")
z
x
z[1] - z[2]
weekdays(d2)
months(d2)
julian(d2)
as.numerica(z[1] - z[2])
as.numeric(z[1] - z[2])
x = c("1jan1960", "2jan1960", "3jan1960", "4jan1960"); z = as.Date(x, "%d%b%Y")
x; z
z[1] - z[2]
weekdays(d2)
months(d2)
julian(d2)
as.numeric(z[1] - z[2])
library(lubridate); ymd("20140108")
install.packages("lubridate")
library(lubridate); ymd("20140108")
mdy("08/30/2013")
dmy("03-04-2013")
ymd("20140108 10:15:03")
ymd("2014_01_08 10:15:03")
ymd("2014-01-08 10:15:03")
ymd_hms("2014-01-08 10:15:03")
ymd_hms("20140108 10:15:03")
ymd_hms("20140108 10:15:03", tz = "Pacific/Aukland")
ymd_hms("20140108 10:15:03", tz = "Pacific/Auckland")
?Sys.timezone
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(oackage = lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now
this_moment <- now()
this_day
this_moment
hour(this_moment)
my_date ,_ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("--192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_mom
this_moment
this_moment <-update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
depart = nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart,hms(17:34:00))
depart <- update(depart,hms(17:34:00))
depart <- update(depart,)
depart <- update(depart,hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong Kong")
with_tz(arrive, tzone = "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval()
?interavl
?interval
how_long <- interval(depart, arrive)
how_long <- interval(last_time, arrive)
how_long
as.period(how_long)
stopwatch()
########################################################################################
# File: run_analysis.R
# Date: 3/11/17
# Author: Vincent Palacios
########################################################################################
########################################################################################
# 0. BRIEF DESCRIPTION
########################################################################################
# https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
#
# You should create one R script called run_analysis.R that does the following.
#
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
#remove all objects
rm(list=ls())
sessionInfo()
# Move to the 'datadir' folder
datadir <- "/Users/vincent/VP_GitLibrary/datasciencecoursera
setwd(datadir)
#Load packages for use. Note they each must be installed already using: install.packages("PACK_NAME")
x <- c("ggplot2", "rgdal", "maptools", "rgeos", "raster", "acs", "grid", "gridExtra") #, "mapproj")
lapply(x, library, character.only = TRUE)
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
if (!file.exists("cb_2015_us_state_20m.shp")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
ls()
dir()
########################################################################################
# File: run_analysis.R
# Date: 3/11/17
# Author: Vincent Palacios
########################################################################################
########################################################################################
# 0. BRIEF DESCRIPTION
########################################################################################
# https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
#
# You should create one R script called run_analysis.R that does the following.
#
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
#remove all objects
rm(list=ls())
sessionInfo()
# Move to the 'datadir' folder
datadir <- "/Users/vincent/VP_GitLibrary/datasciencecoursera"
setwd(datadir)
if (!file.exists(paste0(datadir,"UCI HAR Dataset.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = paste0(datadir,"UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
dir()
if (!file.exists(paste0(datadir,"UCI HAR Dataset.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = paste0(datadir,"UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
if (!file.exists(paste0(datadir,"UCI HAR Dataset.zip"))) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = paste0(datadir,"UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
if (!file.exists(paste0(datadir,"UCI HAR Dataset.zip"))) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = paste0(datadir,"UCI HAR Dataset.zip"))
unzip("UCI HAR Dataset.zip")
}
dir()
if (!file.exists("UCI HAR Dataset.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
dir()
dir()
dir("/UCI HAR Dataset")
dir("./UCI HAR Dataset")
dir("./UCI HAR Dataset/train")
rawdata <- read.table("./UCI HAR Dataset/train/X_test.txt")
rawdata <- read.table("./UCI HAR Dataset/train/X_train.txt")
View(rawdata)
rawdatanames <- read.table("./UCI HAR Dataset/features.txt")
rawdatanames
grep("Alameda", rawdatanames[,2])
grep("Alameda", rawdatanames[,2], value = TRUE)
grepl("Alameda", rawdatanames[,2])
grepl("mean()", rawdatanames[,2])
grep("mean()", rawdatanames[,2])
grep("mean()|std()", rawdatanames[,2])
extractcol <- grep("mean()|std()", rawdatanames[,2])
extractdata <- rawdata[,extractcol]
extractdata
head(extractdata)
rawtraindata <- read.table("./UCI HAR Dataset/train/X_train.txt")
rawtestdata <- read.table("./UCI HAR Dataset/test/X_test.txt")
dim(rawtraindata)
dim(rawtraindata)
rawdata <- rbind(rawtraindata,rawtestdata)
dim(rawtestdata)
dim(rawdata)
rawdatanames <- read.table("./UCI HAR Dataset/features.txt")
extractcol <- grep("mean()|std()", rawdatanames[,2])
extractdata <- rawdata[,extractcol]
dim(extractdata)
head(rawtestdata)
rawtrainlabeldata <- read.table("./UCI HAR Dataset/train/y_train.txt")
dim(rawtrainlabeldata)
rawtrainlabeldata <- read.table("./UCI HAR Dataset/train/y_train.txt")
dim(rawtrainlabeldata)
rawtestlabeldata <- read.table("./UCI HAR Dataset/test/y_test.txt")
dim(rawtestlabeldata)
rawlabeldata <- rbind(rawtrainlabeldata,rawtestlabeldata)
dim(rawlabeldata)
dim(rawdata)
extractdata <- cbind(extractdata, rawlabeldata)
dim(extractdata)
activitylabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
View(extractdata)
?join
extractdata$psuedo_id <- seq.int(nrow(extractdata))
View(extractdata)
head(extractdata$V1)
head(extractdata$V1 )
head(extractdata$"V1")
head(extractdata$"V1 ")
head(extractdata$" V1")
colnames(extractdata)
colnames(rawlabeldata)
colnames(rawlabeldata) <- "Activity_id"
colnames(rawlabeldata)
colnames(rawlabeldata) <- "activity_id"
colnames(rawlabeldata)
colnames(activitylabels)
extractdata <- rawdata[,extractcol]
dim(extractdata)
#### Step 3. Use descriptive activity names to name the activities in the data set
rawtrainlabeldata <- read.table("./UCI HAR Dataset/train/y_train.txt")
dim(rawtrainlabeldata)
rawtestlabeldata <- read.table("./UCI HAR Dataset/test/y_test.txt")
dim(rawtestlabeldata)
rawlabeldata <- rbind(rawtrainlabeldata,rawtestlabeldata)
dim(rawlabeldata)
colnames(rawlabeldata) <- "activity_id"
extractdata <- cbind(extractdata, rawlabeldata)
dim(extractdata)
extractdata$psuedo_id <- seq.int(nrow(extractdata))
activitylabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
colnames(activitylabels)
extractdata = merge(extractdata, activitylabels, by.x = "activity_id", by.y = "V1")
head(extractdata)
extractcolnames <- rawdatanames[extractcol,2]
extractcolnames
head(extractdata)
colnames(extractdata)[2:80] <- extractcolnames
head(extractdata)
class(extractcolnames)
as.character(extractcolnames)
as.character(extractcolnames) <- rawdatanames[extractcol,2]
colnames(extractdata)[2:80] <- extractcolnames
extractcolnames <- rawdatanames[extractcol,2]
as.character(extractcolnames) <- extractcolnames
colnames(extractdata)[2:80] <- extractcolnames
as.character(extractcolnames)
extractcolnames <- as.character(rawdatanames[extractcol,2])
colnames(extractdata)[2:80] <- extractcolnames
head(extractdata)
?table
with(extractdata, table(activity_id, V2.y)
)
colnames(activitylabels)
########################################################################################
# File: run_analysis.R
# Date: 3/11/17
# Author: Vincent Palacios
########################################################################################
########################################################################################
# 0. BRIEF DESCRIPTION
########################################################################################
# https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
#
# You should create one R script called run_analysis.R that does the following.
#
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
#remove all objects
rm(list=ls())
sessionInfo()
# Move to the 'datadir' folder
datadir <- "/Users/vincent/VP_GitLibrary/datasciencecoursera"
setwd(datadir)
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
if (!file.exists("UCI HAR Dataset.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
dir("./UCI HAR Dataset/train")
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
#### Step 1.Merge the training and the test sets to create one data set
rawtraindata <- read.table("./UCI HAR Dataset/train/X_train.txt")
dim(rawtraindata)
rawtestdata <- read.table("./UCI HAR Dataset/test/X_test.txt")
dim(rawtestdata)
rawdata <- rbind(rawtraindata,rawtestdata)
dim(rawdata)
#### Step 2. Extract only the measurements on the mean and standard deviation for each measurement
rawdatanames <- read.table("./UCI HAR Dataset/features.txt")
extractcol <- grep("mean()|std()", rawdatanames[,2])
extractdata <- rawdata[,extractcol]
dim(extractdata)
#### Step 3. Use descriptive activity names to name the activities in the data set
rawtrainlabeldata <- read.table("./UCI HAR Dataset/train/y_train.txt")
dim(rawtrainlabeldata)
rawtestlabeldata <- read.table("./UCI HAR Dataset/test/y_test.txt")
dim(rawtestlabeldata)
rawlabeldata <- rbind(rawtrainlabeldata,rawtestlabeldata)
dim(rawlabeldata)
colnames(rawlabeldata) <- "activity_id"
extractdata <- cbind(extractdata, rawlabeldata)
dim(extractdata)
extractdata$psuedo_id <- seq.int(nrow(extractdata))
activitylabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
colnames(activitylabels) <- c("activity_id", "activity_label")
extractdata = merge(extractdata, activitylabels, by.x = "activity_id", by.y = "activity_id")
with(extractdata, table(activity_id, activity_label)
)
head(extractdata)
extractcolnames <- as.character(rawdatanames[extractcol,2])
colnames(extractdata)[2:80] <- extractcolnames
head(extractdata)
subtraindata <- read.table("./UCI HAR Dataset/train/subject_train.txt")
labtraindata <- read.table("./UCI HAR Dataset/train/y_train.txt")
rawtraindata <- read.table("./UCI HAR Dataset/train/X_train.txt")
traindata <- cbind(subtraindata,labtraindata,rawtraindata)
head(traindata)
subtestdata <- read.table("./UCI HAR Dataset/test/subject_test.txt")
labtestdata <- read.table("./UCI HAR Dataset/test/y_test.txt")
rawtestdata <- read.table("./UCI HAR Dataset/test/X_test.txt")
testdata <- cbind(subtestdata,labtestdata,rawtestdata)
head(testdata)[1:6]
rawdata <- rbind(traindata,testdata)
dim(rawdata)
rawdata <- cbind(psuedo_id,rawdata)
psuedo_id <- seq.int(nrow(rawdata))
rawdata <- cbind(psuedo_id,rawdata)
head(rawdata)[1:6]
varnames <- read.table("./UCI HAR Dataset/features.txt")
extractcol <- grep("mean()|std()", varnames[,2])
append(1:5, 0:1, after = 3)
append(1:5, 0:1, after = 0)
extractdata <- rawdata[,append(extractcol+2, 1:2, after = 0]
extractdata <- rawdata[,append(extractcol+2, 1:2, after = 0)]
append(extractcol+2, 1:2, after = 0)
extractcol
head(extractdata)[1:6]
head(rawdata)[1:6]
activitylabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
colnames(activitylabels) <- c("activity_id", "activity_label")
########################################################################################
# File: run_analysis.R
# Date: 3/11/17
# Author: Vincent Palacios
########################################################################################
########################################################################################
# 0. BRIEF DESCRIPTION
########################################################################################
# https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
#
# You should create one R script called run_analysis.R that does the following.
#
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
#remove all objects
rm(list=ls())
sessionInfo()
# Move to the 'datadir' folder
datadir <- "/Users/vincent/VP_GitLibrary/datasciencecoursera"
setwd(datadir)
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
if (!file.exists("UCI HAR Dataset.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
}
dir("./UCI HAR Dataset/train")
########################################################################################
# 1. CLEAR ENVIRONMENT, REQUIRE PACKAGES NEEDED
########################################################################################
#### Step 1.Merge the training and the test sets to create one data set
subtraindata <- read.table("./UCI HAR Dataset/train/subject_train.txt")
labtraindata <- read.table("./UCI HAR Dataset/train/y_train.txt")
rawtraindata <- read.table("./UCI HAR Dataset/train/X_train.txt")
traindata <- cbind(subtraindata,labtraindata,rawtraindata)
head(traindata)[1:6]
subtestdata <- read.table("./UCI HAR Dataset/test/subject_test.txt")
labtestdata <- read.table("./UCI HAR Dataset/test/y_test.txt")
rawtestdata <- read.table("./UCI HAR Dataset/test/X_test.txt")
testdata <- cbind(subtestdata,labtestdata,rawtestdata)
head(testdata)[1:6]
rawdata <- rbind(traindata,testdata)
colnames(rawdata)[1:2] <- c("subject_id", "activity_id")
psuedo_id <- seq.int(nrow(rawdata))
rawdata <- cbind(psuedo_id,rawdata)
head(rawdata)[1:6]
#### Step 2. Extract only the measurements on the mean and standard deviation for each measurement
varnames <- read.table("./UCI HAR Dataset/features.txt")
extractcol <- grep("mean()|std()", varnames[,2])
extractdata <- rawdata[,append(extractcol+2, 1:2, after = 0)]
head(extractdata)[1:6]
#### Step 3. Use descriptive activity names to name the activities in the data set
activitylabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
colnames(activitylabels) <-  c("activity_id", "activity_label")
extractdata = merge(extractdata, activitylabels, by.x = "activity_id", by.y = "activity_id")
head(extractdata)[1:6]
with(extractdata, table(activity_id, activity_label))
head(extractdata)[c(1:6,82)]
?sort
(ii <- order(x <- c(1,1,3:1,1:4,3), y <- c(9,9:1), z <- c(2,1:9)))
rbind(x, y, z)[,ii]
order(extractdata$psuedo_id)
extractdata$psuedo_id
order(extractdata$psuedo_id)
extractdata$psuedo_id, method = "radix")
order(extractdata$psuedo_id, method = "radix")
class(extractdata$psuedo_id)
extractdata$psuedo_id[100]
extractdata$psuedo_id[101]
sort.list(extractdata$psuedo_id, method = "radix")
class(extractdata)
extractcolnames <- as.character(rawdatanames[extractcol,2])
extractcolnames <- as.character(varnames[extractcol,2])
head(extractdata)[c(1:6,82)]
dim(rawdata)
head(extractdata)[1:6]
varnames <- read.table("./UCI HAR Dataset/features.txt")
extractcol <- grep("mean()|std()", varnames[,2])
extractdata <- rawdata[,append(extractcol+2, 1:3, after = 0)]
head(extractdata)[1:6]
head(rawdata)[1:6]
#### Step 2. Extract only the measurements on the mean and standard deviation for each measurement
varnames <- read.table("./UCI HAR Dataset/features.txt")
extractcol <- grep("mean()|std()", varnames[,2])
extractdata <- rawdata[,append(extractcol+3, 1:3, after = 0)]
head(extractdata)[1:6]
#### Step 3. Use descriptive activity names to name the activities in the data set
activitylabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
colnames(activitylabels) <-  c("activity_id", "activity_label")
extractdata = merge(extractdata, activitylabels, by.x = "activity_id", by.y = "activity_id")
head(extractdata)[c(1:6,82)]
head(extractdata)[c(1:6,83)]
sort.list(extractdata$psuedo_id, method = "radix")
sort.list(extractdata$psuedo_id, method = "shell")
